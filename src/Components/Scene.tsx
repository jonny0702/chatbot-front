/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: codyc2228 (https://sketchfab.com/codyc2228)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/lovedeathrobots-fb5ae6992cf944cba6a2ac79e15202a1
title: love,death,robots
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Object_6: THREE.Mesh
    Object_8: THREE.Mesh
    Object_10: THREE.Mesh
    Object_12: THREE.Mesh
    Object_14: THREE.Mesh
    Object_16: THREE.Mesh
    Object_18: THREE.Mesh
  }
  materials: {
    BlackMetal: THREE.MeshStandardMaterial
    ButterflyBody: THREE.MeshStandardMaterial
    ButterflyWings: THREE.MeshStandardMaterial
    Glow: THREE.MeshStandardMaterial
    OrangePaint: THREE.MeshStandardMaterial
    Screen: THREE.MeshStandardMaterial
    Stripes: THREE.MeshStandardMaterial
  }
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/scene.gltf') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          <group rotation={[-Math.PI / 2, 0, 0]}>
            <mesh geometry={nodes.Object_6.geometry} material={materials.BlackMetal} />
            <mesh geometry={nodes.Object_8.geometry} material={materials.ButterflyBody} />
            <mesh geometry={nodes.Object_10.geometry} material={materials.ButterflyWings} />
            <mesh geometry={nodes.Object_12.geometry} material={materials.Glow} />
            <mesh geometry={nodes.Object_14.geometry} material={materials.OrangePaint} />
            <mesh geometry={nodes.Object_16.geometry} material={materials.Screen} />
            <mesh geometry={nodes.Object_18.geometry} material={materials.Stripes} />
          </group>
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/scene.gltf')
